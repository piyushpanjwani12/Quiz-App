/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mytqaproj.GUI;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import mytqaproj.Dao.PerformanceDAO;
import mytqaproj.Dao.QuestionDao;
import mytqaproj.Dao.UsersDAO;
import mytqaproj.pojo.AnswerPojo;
import mytqaproj.pojo.AnswerStore;
import mytqaproj.pojo.ExamPojo;
import mytqaproj.pojo.Performance;
import mytqaproj.pojo.Question;
import mytqaproj.pojo.QuestionStore;

/**
 *
 * @author DELL
 */
public class TakeTestFrame extends javax.swing.JFrame {
    private ExamPojo exam;
    private QuestionStore qStore;
    private AnswerStore aStore;
    int qno;
    int pos;
    /**
     * Creates new form TakeTestFrame
     */
    public TakeTestFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        qStore=new QuestionStore();
        aStore=new AnswerStore();
        qno=1;
        
        
    }
    public TakeTestFrame(ExamPojo exam)
    {
        this();
        this.exam=exam;
        lblTitle.setText(exam.getLanguage().toUpperCase()+" Paper");
        loadQuestions();
        showQuestion();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblQno = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        lblTitle.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle.setText("Java Paper");

        lblQno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblQno.setText("Question ");

        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mytqaproj/GUI/good luck.png"))); // NOI18N

        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrOption1.setText("interface");
        jrOption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrOption2.setText("string");

        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrOption3.setText("signed");

        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jrOption4.setText("Double");

        btnNext.setBackground(new java.awt.Color(0, 153, 204));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(0, 153, 204));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 153, 204));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 153, 204));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel3.setText("Logout");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(lblQno)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrOption1)
                            .addComponent(jrOption3))
                        .addGap(80, 80, 80)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrOption4)
                            .addComponent(jrOption2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel4)
                .addContainerGap(106, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(255, 255, 255)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(36, Short.MAX_VALUE)
                        .addComponent(lblTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel4)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQno))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrOption2)
                            .addComponent(jrOption1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrOption3)
                            .addComponent(jrOption4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNext)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrevious)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)
                        .addGap(18, 18, 18)
                        .addComponent(btnDone)))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrOption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption1ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        UserLoginFrame ulf=new UserLoginFrame();
        ulf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        String chosenAnswer = null;
        if(jrOption1.isSelected())
            chosenAnswer="Option1";
        else if(jrOption2.isSelected())
            chosenAnswer="Option2";
        else if(jrOption3.isSelected())
            chosenAnswer="Option3";
        else if(jrOption4.isSelected())
            chosenAnswer="Option4";
        else
            JOptionPane.showMessageDialog(null,"You have not selected any answer!","End of Test",JOptionPane.INFORMATION_MESSAGE);
        
        if(chosenAnswer!=null)
        {
            Question question=qStore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newAnswer=new AnswerPojo(exam.getExamId(),exam.getLanguage(),qno, chosenAnswer, correctAnswer);
            System.out.println(newAnswer);
            AnswerPojo answer=aStore.getAnswerByQno(qno);
            if(answer==null)
            {
                aStore.addAnswer(newAnswer);
            }
            else
            {
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=aStore.removeAnswer(answer);
                    aStore.setAnswerAt(apos, newAnswer);
                }
            }
        
        System.out.println("chosen : "+chosenAnswer);
        
        int questionCount=qStore.getCount();
        pos++;
        
        if(pos>=questionCount)
        {
            btnNext.setEnabled(false);
            pos=0;
           
            JOptionPane.showMessageDialog(null,"End of Questions, Click done to submit !","End of Test",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        qno++;
        if(qno>questionCount)
            qno=1;
        showQuestion();
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = null;
        if(jrOption1.isSelected())
            chosenAnswer="Option1";
        else if(jrOption2.isSelected())
            chosenAnswer="Option2";
        else if(jrOption3.isSelected())
            chosenAnswer="Option3";
        else if(jrOption4.isSelected())
            chosenAnswer="Option4";
        else
            JOptionPane.showMessageDialog(null,"You have not selected any answer!","End of Test",JOptionPane.INFORMATION_MESSAGE);
        
        if(chosenAnswer!=null)
        {
            Question question=qStore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newAnswer=new AnswerPojo(exam.getExamId(),exam.getLanguage(),qno, chosenAnswer, correctAnswer);
            System.out.println(newAnswer);
            AnswerPojo answer=aStore.getAnswerByQno(qno);
            if(answer==null)
            {
                aStore.addAnswer(newAnswer);
            }
            else
            {
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=aStore.removeAnswer(answer);
                    aStore.setAnswerAt(apos, newAnswer);
                }
                
            }
        }
        
        int right=0, wrong=0;
        for(Question question:qStore.getAllQuestions())
        {
            int qno=question.getQno();
            AnswerPojo answer=aStore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
                {
                    String chosenAnswer1=answer.getChosenAnswer();
                    String correctAnswer1=answer.getCorrectAnswer();
                    if(chosenAnswer1.equals(correctAnswer1))
                        ++right;
                    else
                        ++wrong;
                    
                }
        }
        String reportCard="total questions:"+qStore.getCount();
        reportCard+="\nRight Answers:"+right;
        reportCard+="\nWrong Answers:"+wrong;
        reportCard+="\nUnattempted:"+(qStore.getCount()-(right+wrong));
        JOptionPane.showMessageDialog(null,reportCard,"Your Result",JOptionPane.INFORMATION_MESSAGE);
        
        try{
            Performance perform=new Performance(UsersDAO.getUsersName(),exam.getExamId(),exam.getLanguage(),right,wrong,(qStore.getCount()-(right+wrong)),(double)right/qStore.getCount()*100);
            PerformanceDAO.addPerformance(perform);
            JOptionPane.showMessageDialog(null,"Your performance have been successfully saved","End of Test",JOptionPane.INFORMATION_MESSAGE);
            ChoosePaperFrame choosePaper=new ChoosePaperFrame();
            choosePaper.setVisible(true);
            this.dispose();
        }
        catch(SQLException e)
        {
                JOptionPane.showMessageDialog(null,"SQLException : " +e,"End of Test",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        ChoosePaperFrame choosePaper=new ChoosePaperFrame();
            choosePaper.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
         String chosenAnswer = null;
        if(jrOption1.isSelected())
            chosenAnswer="Option1";
        else if(jrOption2.isSelected())
            chosenAnswer="Option2";
        else if(jrOption3.isSelected())
            chosenAnswer="Option3";
        else if(jrOption4.isSelected())
            chosenAnswer="Option4";
        
        /*else
            JOptionPane.showMessageDialog(null,"You have not selected any answer!","End of Test",JOptionPane.INFORMATION_MESSAGE);*/
        
        if(chosenAnswer!=null)
        {
            Question question=qStore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newAnswer=new AnswerPojo(exam.getExamId(),exam.getLanguage(),qno, chosenAnswer, correctAnswer);
            System.out.println(newAnswer);
            AnswerPojo answer=aStore.getAnswerByQno(qno);
            //String prev=answer.getChosenAnswer();
            
            if(answer==null)
            {
                aStore.addAnswer(newAnswer);
            }
            else
            {
                if(newAnswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=aStore.removeAnswer(answer);
                    aStore.setAnswerAt(apos, newAnswer);
                }
            }
        
        System.out.println("chosen : "+chosenAnswer);
        }
        int questionCount=qStore.getCount();
        pos--;
        
        if(pos>=questionCount)
        {
            btnNext.setEnabled(false);
            pos=0;
           
            JOptionPane.showMessageDialog(null,"End of Questions, Click done to submit !","End of Test",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        qno--;
        if(qno>questionCount)
            qno=1;
        showQuestion();
           
        
    }//GEN-LAST:event_btnPreviousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables

    private void loadQuestions() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        try{
            ArrayList<Question> questionList=QuestionDao.getQuestionsByExamId(exam.getExamId());
            for(Question Obj:questionList)
            {
                qStore.addQuestion(Obj);
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,"SQLException"+e,"Error",JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    private void showQuestion() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        Question question=qStore.getQuestion(pos);
        buttonGroup1.clearSelection();
        txtQuestion.setText(question.getQuestion());
        jrOption1.setText(question.getAnswer1());
        jrOption2.setText(question.getAnswer2());
        jrOption3.setText(question.getAnswer3());
        jrOption4.setText(question.getAnswer4());
        lblQno.setText("Question "+qno+" :");
        AnswerPojo answer=aStore.getAnswerByQno(qno);
        if(answer==null)
        {
            System.out.println("pp");
            return;
        }
        String chosenAnswer=answer.getChosenAnswer();
        switch(chosenAnswer)
        {
            case "Option1":
                jrOption1.setSelected(true);
                break;
            case "Option2":
                jrOption2.setSelected(true);
                break;
            case "Option3":
                jrOption3.setSelected(true);
                break;
            case "Option4":
                jrOption4.setSelected(true);
                break;
            default:
                System.out.println("Some error occurred");
            
        }
        
        
    }
}
